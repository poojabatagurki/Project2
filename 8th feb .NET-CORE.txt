.NET-CORE

open-source
Performance is better.
windows,linux,MAC.

ASP.NET-CORE

MVC-CORE

M->Model
collection of classes(data-members and functions).

C->Controller
class file,collection of action-methods.

V->view
helpers->controls in MVC

ASP.NET MVC-CORE
->it is  technology for developing web application.
->It is bested suited for TDD(test-driven and development) application
->MVC provides "SOC" seperation of concern.
model,controller and view code is seperated(helps in writing highly maintainable).

ex1:
  public IActionResult Index()
        {
            return View();
        }

<h1>welcome to .NET-CORE application</h1>

ex2:
 public IActionResult display()
        {
            ViewData["info1"] = System.DateTime.Now.ToLongDateString();
            ViewData["prodet"] = "P001,Laptop,76000";
            return View();
        }

<h3>
    Date:@ViewData["info1"]  <br />
    Product_Details:@ViewData["prodet"]
</h3>

ex3:
 public class Customer
    {
         public int cid { get; set; }
         public string cname { get; set; }
         public string Email { get; set; }
    }

  public IActionResult getcust()
        {
            Customer obj = new Customer();
            obj.cid = 1;
            obj.cname = "XXX";
            obj.Email = "xxx@yahoo.com";
            return View(obj);
        }

@model CG_MVC_COREAPP.Models.Customer

<h3>Customer Details</h3>

<ul>
    <li>
        Cid:@Model.cid
    </li>
    <li>
        Cname:@Model.cname
    </li>
    <li>
        CEmail:@Model.Email
    </li>
</ul>

ex4:
 public IActionResult addform()
        {
            return View();
        }

        public IActionResult addnos()
        {
            int x =int.Parse(Request.Form["no1"].ToString());
            int y = int.Parse(Request.Form["no2"].ToString());
            int z = x + y;
            ViewData["sum"] = z;
            ViewData["no1"] = x;
            ViewData["no2"] = y;
            return View("addform");
        }
<form method="post" action="addnos">
    <h2>Addition of Numbers</h2>
    Enter First Number: <input type="text" name="no1" value="@ViewData["no1"]" /> <br />
    Enter Second Number: <input type="text" name="no2" value="@ViewData["no2"]"/> <br />
    <input type="submit" value="Add" /> <br />
    Sum of 2 nos: <input type="text" name="no3" value="@ViewData["sum"]"/> <br />
</form>

ex5:

namespace CG_MVC_COREAPP.Models
{
    public class Logindet
    {
        public string username { get; set; }
        public string password { get; set; }
    }
}

 public IActionResult Loginform()
        {
            return View();
        }

        public IActionResult validatelogin()
        {
            Logindet obj = new Logindet();
            obj.username = Request.Form["txtuname"].ToString();
            obj.password = Request.Form["txtpword"].ToString();

            if (obj.username == "scott" && obj.password == "scott123")
                ViewData["res"] = "Login success";
            else
                ViewData["res"] = "Login failed";
            return View("Loginform");
        }


<form method="post" action="validatelogin">
    <h2>Login Details</h2>
    Enter UserName: <input type="text" name="txtuname" /> <br />
    Enter Password: <input type="password" name="txtpword" /> <br />
    <input type="submit" value="Login" /> <br />
    <label>@ViewData["res"]</label>
</form>

ex6:

 public class Customer
    {
         public int cid { get; set; }
         public string cname { get; set; }
         public string Email { get; set; }
    }

 public IActionResult getcustdet()
        {
            return View();
        }

        public IActionResult  displaydet()
        {
            Customer cobj = new Customer();
            cobj.cid = int.Parse(Request.Form["t1"].ToString());
            cobj.cname = (Request.Form["t2"].ToString());
            cobj.Email = Request.Form["t3"].ToString();
            return View(cobj);
        }
<form method="post" action="displaydet">
    <h2>Customer Details</h2>
    Enter Cid: <input type="text" name="t1" /> <br />
    Enter CName: <input type="text" name="t2" /> <br />
    Enter CEmail: <input type="text" name="t3" /> <br />
    <input type="submit" value="submit"/>
</form>

ex6:
Nested class in Model:
namespace CG_MVC_COREAPP.Models
{
    public class Employee
    {
        public Employee()
        {
            dtobj = new Dept();
        }
        public int eid { get; set; }
        public string ename { get; set; }
        public string desig { get; set; }
        public Dept dtobj { get; set; }
    }

    public class Dept
    {
        public string dname { get; set; }
        public int noemp { get; set; }
    }
}

 public IActionResult printempdet()
        {
            Employee obj = new Employee();
            obj.eid=1;
            obj.ename = "xxx";
            obj.desig = "HR-MANAGER";
            obj.dtobj.dname = "HR-DEPT";
            obj.dtobj.noemp =5;

            return View(obj);
        }

@model CG_MVC_COREAPP.Models.Employee

<h3>Emp_Dept Details</h3>

<ul>
    <li>
        EmpId:@Model.eid
    </li>
    <li>
        Ename:@Model.ename
    </li>
    <li>
        Edesig:@Model.desig
    </li>
    <li>
        DeptName:@Model.dtobj.dname
    </li>
    <li>
        Noofemp:@Model.dtobj.noemp
    </li>
</ul>

<table border="2px solid blue" style="background-color:azure;" cellpadding="20px">
    <tr>
        <td>EmpId</td>
        <td>@Model.eid</td>
    </tr>
    <tr>
        <td>EmpName</td>
        <td>@Model.ename</td>
    </tr>
    <tr>
        <td>EmpDesig</td>
        <td>@Model.desig</td>
    </tr>
    <tr>
        <td>Dept_name</td>
        <td>@Model.dtobj.dname</td>
    </tr>
    <tr>
        <td>Noofemp</td>
        <td>@Model.dtobj.noemp</td>
    </tr>
</table>

Ex7:Wrapper Class

class student
{
}
class coursedt
{
}

class Exampleclass
{
student sobj{}

coursedt cobj{}
}


namespace CG_MVC_COREAPP.Models
{
    public class Student
    {
        public int Regno { get; set; }
        public string name { get; set; }
        public string Mailid { get; set; }
    }
}

namespace CG_MVC_COREAPP.Models
{
    public class Course
    {
        public string cname { get; set; }
        public int cdur { get; set; }
    }
}


namespace CG_MVC_COREAPP.ViewModel
{
    public class Stu_Course //Wrapper
    {
       public Student studentobj { get; set; }
       public Course courseobj { get; set; }
    }
}


        public IActionResult printscdet()
        {
            Student st = new Student() {Regno=1,name="Sam",Mailid="sam@yahoo.co.in" };
            Course cs = new Course() {cname="FULL STACK .NET",cdur=4};

            Stu_Course csobj = new Stu_Course() {
              studentobj= st,
              courseobj=cs
            };
            return View(csobj);
        }

@model CG_MVC_COREAPP.ViewModel.Stu_Course

<h3> student_course Detail</h3>

<table border="2px solid blue" style="background-color:azure;" cellpadding="20px">
    <tr>
        <td>Regno</td>
        <td>@Model.studentobj.Regno</td>
    </tr>
    <tr>
        <td>studentName</td>
        <td>@Model.studentobj.name</td>
    </tr>
    <tr>
        <td>EMailId:</td>
        <td>@Model.studentobj.Mailid</td>
    </tr>
    <tr>
        <td>Course_NAME</td>
        <td>@Model.courseobj.cname</td>
    </tr>
    <tr>
        <td>Course_duration</td>
        <td>@Model.courseobj.cdur</td>
    </tr>
</table>

Content returning result

Viewresult

 public ViewResult printdet()
        {
            return View("Index");
        }

contentresult

public ContentResult printdet1()
        {
            return Content("<h1>welcome to content result</h1>","text/html");
        }

emptyresult
  public EmptyResult printdet()
        {
             return new EmptyResult();
        }


jsonresult
  public JsonResult printdet1()
        {
            Customer obj = new Customer() { cid=1,cname="Ann",Email="ann@gmail.com" };
            return Json(obj);
        }

partialviewresult

public PartialViewResult printdet()
        {
            return PartialView("_PartialView1");
        }


fileresult
 public FileContentResult getfile()
        {
            string path = "C:/Users/Dhanraj/Downloads/Topics for Training.pdf";
            byte[] file = System.IO.File.ReadAllBytes(path);

            return new FileContentResult(file, "application/pdf");
        }




